# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.aws.dev/devops-aws/tecli

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - publish

info:
  stage: build
  script:
    - make go/version go/env

build:
  stage: build
  script:
    - make gitlab/build
  artifacts:
    paths:
      - build/tecli

# darwin_amd64:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/darwin/amd64
#   artifacts:
#     paths:
#       - dist/tecli-darwin-amd64

# solaris_amd64:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/solaris/amd64
#   artifacts:
#     paths:
#       - dist/tecli-solaris-amd64

# freebsd_386:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/freebsd/386
#   artifacts:
#     paths:
#       - dist/tecli-freebsd-386

# freebsd_amd64:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/freebsd/amd64
#   artifacts:
#     paths:
#       - dist/tecli-freebsd-amd64

# freebsd_arm:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/freebsd/arm
#   artifacts:
#     paths:
#       - dist/tecli-freebsd-arm

# openbsd_386:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/openbsd/386
#   artifacts:
#     paths:
#       - dist/tecli-openbsd-386

# openbsd_amd64:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/openbsd/amd64
#   artifacts:
#     paths:
#       - dist/tecli-openbsd-amd64

# openbsd_arm:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/openbsd/arm
#   artifacts:
#     paths:
#       - dist/tecli-openbsd-arm

# linux_386:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/linux/386
#   artifacts:
#     paths:
#       - dist/tecli-linux-386

linux_amd64:
  only:
    refs:
      - tags
  stage: publish
  script:
    - make gitlab/release/linux/amd64
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/tecli-linux-amd64 ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/tecli/${CI_COMMIT_TAG}/tecli-linux-amd64'
  artifacts:
    paths:
      - dist/tecli-linux-amd64

# linux_arm:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/linux/arm
#   artifacts:
#     paths:
#       - dist/tecli-linux-arm

# windows_386:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/windows/386
#   artifacts:
#     paths:
#       - dist/tecli-windows-386

# windows_amd64:
#   only:
#     refs:
#       - tags
#   stage: publish
#   script:
#     - make gitlab/release/windows/amd64
#   artifacts:
#     paths:
#       - dist/tecli-windows-amd64

# publish:
#   stage: publish
#   script:
#     - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/tecli-linux-amd64 ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/my_package/0.0.1/file.txt'

